{"version":3,"sources":["components/Loader.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","img/default.jpg","views/Cast.jsx","views/Reviews.jsx","views/MovieDetailsPage.jsx"],"names":["Loader","isLoading","className","loading","color","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","Cast","state","src","cast","fetchCredits","movieId","props","match","params","setState","axios","get","then","response","data","catch","error","console","log","finally","this","map","cast_id","profile_path","name","character","alt","defaultImg","React","Component","Reviews","reviews","fetchReviews","results","id","author","content","MovieDetailsPage","release_date","fetchDetails","api","getMovieDetails","result","hendleGoBack","location","history","from","routes","home","original_title","poster_path","overview","popularity","vote_average","vote_count","genres","type","onClick","String","Math","round","Navigetion","NavMovieDetails","path","component"],"mappings":"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","file":"static/js/movieDetalis-page.794a06f3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport PropagateLoader from 'react-spinners/PropagateLoader';\n\nconst Loader = isLoading => {\n  return (\n    <div className=\"loaderDiv\">\n      <PropagateLoader loading={isLoading} color={'red'} />\n    </div>\n  );\n};\n\nLoader.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n};\n\nexport default Loader;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import React from 'react';\n// import api from '../api/movies-api';\nimport axios from 'axios';\nimport defaultImg from '../img/default.jpg';\nimport Loader from '../components/Loader';\n\nclass Cast extends React.Component {\n  state = {\n    src: 'https://image.tmdb.org/t/p/w500',\n    isLoading: false,\n    cast: [],\n  };\n\n  componentDidMount() {\n    this.fetchCredits();\n  }\n\n  fetchCredits = () => {\n    const { movieId } = this.props.match.params;\n    this.setState({ isLoading: true });\n    // console.log(movieId);\n\n    // api.getMovieCredits(movieId).then(cast => {\n    //   this.setState({ ...cast });\n    // });\n\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=523a15ded98cd05fab36993344058e43`,\n      )\n      .then(response => {\n        this.setState({ cast: [...response.data.cast] });\n      })\n      .catch(error => {\n        console.log(error);\n        return [];\n      })\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  render() {\n    const { cast, src, isLoading } = this.state;\n    // console.log(cast);\n\n    return (\n      <>\n        <div className=\"container\">\n          <ul className=\"cast_ul\">\n            {cast.map(({ cast_id, profile_path, name, character }) => (\n              <li key={cast_id} className=\"cast_li\">\n                {profile_path ? (\n                  <img\n                    src={`${src}${profile_path}`}\n                    alt=\"Movie poster\"\n                    className=\"cast_img\"\n                  />\n                ) : (\n                  <img\n                    src={defaultImg}\n                    alt=\"Was not found\"\n                    className=\"cast_img\"\n                  />\n                )}\n                <h3 className=\"cast_title\">{name}</h3>\n                <p className=\"cast_text\">{character}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        {isLoading && <Loader isLoading={isLoading} />}\n      </>\n    );\n  }\n}\n\nexport default Cast;\n","import React from 'react';\n// import api from '../api/movies-api';\nimport axios from 'axios';\n\nclass Reviews extends React.Component {\n  state = {\n    reviews: [],\n  };\n\n  componentDidMount() {\n    this.fetchReviews();\n  }\n\n  fetchReviews = () => {\n    const { movieId } = this.props.match.params;\n    // api.getMoviesReviews(movieId).then(results => {\n    //   this.setState({ ...results });\n    // });\n\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=523a15ded98cd05fab36993344058e43`,\n      )\n      .then(response => {\n        this.setState({ reviews: [...response.data.results] });\n      })\n      .catch(error => {\n        console.log(error);\n        return [];\n      });\n  };\n\n  render() {\n    const { reviews } = this.state;\n\n    return (\n      <div>\n        <ul>\n          {reviews.length > 0\n            ? reviews.map(({ id, author, content }) => (\n                <li key={id}>\n                  <h3 className=\"data\">{author}</h3>\n                  <p className=\"text\">{content}</p>\n                </li>\n              ))\n            : `We don't have any reviews for this movie.`}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Reviews;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Cast from './Cast';\nimport Reviews from './Reviews';\nimport api from '../api/movies-api';\nimport Navigetion from '../components/Navigetion';\nimport routes from '../routes';\n\nclass MovieDetailsPage extends React.Component {\n  state = {\n    src: 'https://image.tmdb.org/t/p/w500',\n    release_date: null,\n  };\n\n  componentDidMount() {\n    this.fetchDetails();\n  }\n\n  fetchDetails = () => {\n    const { movieId } = this.props.match.params;\n\n    api.getMovieDetails(movieId).then(result => {\n      this.setState({ ...result });\n    });\n  };\n\n  hendleGoBack = () => {\n    const { location, history } = this.props;\n    //     if (location.state && location.state.from) {\n    //       return history.push(location.state.from);\n    //  }\n    history.push(location?.state?.from || history.push(routes.home));\n  };\n\n  render() {\n    const {\n      src,\n      original_title,\n      poster_path,\n      overview,\n      release_date,\n      popularity,\n      vote_average,\n      vote_count,\n      genres,\n    } = this.state;\n    const { match, location } = this.props;\n    console.log(location.state);\n\n    return (\n      <div className=\"movie_div container\">\n        <button className=\"movie_btn\" type=\"button\" onClick={this.hendleGoBack}>\n          &#9668; Back\n        </button>\n        <h2 className=\"movie_title\">{original_title}</h2>\n        {poster_path && (\n          <img\n            className=\"movie_img\"\n            src={`${src}${poster_path}`}\n            alt={original_title}\n          />\n        )}\n\n        <div className=\"movie_info\">\n          <p className=\"text\">\n            Release: <span className=\"data\">{release_date}</span>\n          </p>\n          <h3 className=\"movie_overview\">Overview </h3>\n          <span className=\"text\">{overview}</span>\n          <p className=\"text\">\n            Popularity:{' '}\n            <span className=\"data\">{String(Math.round(popularity))}</span>\n          </p>\n          <p className=\"text\">\n            Rating: <span className=\"data\">{vote_average}</span>\n          </p>\n          <p className=\"text\">\n            Count: <span className=\"data\">{vote_count}</span>\n          </p>\n          <h3 className=\"text\">Genres</h3>\n          {genres\n            ? genres.map(({ id, name }) => (\n                <p key={id} className=\"data\">\n                  {name}\n                </p>\n              ))\n            : `We don't have any ganres for this movie.`}\n        </div>\n\n        <Navigetion.NavMovieDetails match={match} />\n\n        <Switch>\n          <Route path={`${match.path}/cast`} component={Cast} />\n          <Route path={`${match.path}/reviews`} component={Reviews} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default MovieDetailsPage;\n"],"sourceRoot":""}